<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peter&#39;s Blog</title>
  
  
  <link href="/my_blog/atom.xml" rel="self"/>
  
  <link href="https://uniqueimaginate.github.io/my_blog/"/>
  <updated>2020-05-04T13:23:42.474Z</updated>
  <id>https://uniqueimaginate.github.io/my_blog/</id>
  
  <author>
    <name>Donguk Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Making Hexo Blog #3</title>
    <link href="https://uniqueimaginate.github.io/my_blog/2020/05/04/Making-Hexo-Blog-3/"/>
    <id>https://uniqueimaginate.github.io/my_blog/2020/05/04/Making-Hexo-Blog-3/</id>
    <published>2020-05-04T02:44:39.000Z</published>
    <updated>2020-05-04T13:23:42.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Heo-Blog-만들기-3"><a href="#Heo-Blog-만들기-3" class="headerlink" title="Heo Blog 만들기 # 3"></a>Heo Blog 만들기 # 3</h1><h2 id="Hexo-블로그를-github-pages-를-통해서-배포하기"><a href="#Hexo-블로그를-github-pages-를-통해서-배포하기" class="headerlink" title="Hexo 블로그를 github pages 를 통해서 배포하기"></a>Hexo 블로그를 github pages 를 통해서 배포하기</h2><a id="more"></a><h4 id="Github-에서-repository-만들기"><a href="#Github-에서-repository-만들기" class="headerlink" title="Github 에서 repository 만들기"></a>Github 에서 repository 만들기</h4><p>먼저 이 포스팅은 &lt;사용자id&gt;.github.io 를 만드는 포스팅이 아니라는 점을 명시하고 시작하고자 합니다. 이유는 저와 같은 personal 이용자들은 Github Pages 가 오직 master branch 를 통해서만 deploy 됩니다.</p><p>그러나 아래의 그림과 같이 &lt;사용자id&gt;.github.io 라고 이름을 짓지 않고 프로젝트 이름을 넣어준다면 master branch 가 아닌 다른 branch 를 source 로 설정하게 될 수 있게됩니다. (이 부분에서 막혀서 꽤나 헤맸습니다. ㅠ)</p><img src="/my_blog/2020/05/04/Making-Hexo-Blog-3/name.png" class=""><img src="/my_blog/2020/05/04/Making-Hexo-Blog-3/source_branch.png" class=""><p>여기까지 완성 후에 이제 local 에 만든 Hexo 폴더를 github 로 push 해줍니다.</p><hr><h3 id="Travis-CI-와-연동하기"><a href="#Travis-CI-와-연동하기" class="headerlink" title="Travis CI 와 연동하기"></a>Travis CI 와 연동하기</h3><ol><li><p>Github 계정과 Travis CI 를 연동합니다. 다음의 링크로 가셔서 연동하면 됩니다.<br><a href="https://github.com/marketplace/travis-ci" target="_blank" rel="noopener">Travis CI 연동하기</a></p></li><li><p>그 다음 <a href="https://github.com/settings/installations" target="_blank" rel="noopener">Application Setting</a> 으로 가서 Travis CI 가 만들어 놓은 repository 와 연동되게끔 설정해 줍니다. 저와 같은 경우 다음과 같이 되어 있습니다.</p><img src="/my_blog/2020/05/04/Making-Hexo-Blog-3/TravisCI.png" class=""></li><li><p>이제 여러분의 repository 토큰을 새로 만들어야 합니다.<br><a href="https://github.com/settings/tokens" target="_blank" rel="noopener">토큰 만들기</a> &lt;- 여기로 가셔서 Generate new token 을 누르시면 됩니다.</p><img src="/my_blog/2020/05/04/Making-Hexo-Blog-3/token.png" class=""><p> <b>위의 사진과 같이 scope 는 repo 만 선택하시면 됩니다.</b></p></li><li><p>Generate token 을 하면 토큰이 번호+문자 조합으로 나옵니다. 이 것을 복사해둡시다.</p></li><li><p>이제 Travis page 로 갑니다.</p></li><li><p>해당 repo 의 Setting 에 가게 되면 Environment Variables 가 나옵니다. 여기서 Name에 GH_TOKEN 이라 적고, Value 값으로 복사해둔 토큰을 적고 Add 를 누릅니다.</p></li><li><p>이제 local 에 있는 각자의 Hexo 폴더로 가면 _config.yml 과 package.json 이 있을 겁니다. 그 폴더에 다음의 .travis.yml 파일을 저장합니다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10</span> <span class="comment"># use nodejs v10 LTS</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># build master branch only</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span> <span class="comment"># generate static files</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">$GH_TOKEN</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure></li><li><p>Travis CI 가 배포를 마무리 한다면, gh-pages branch에 만들어진 page 가 보입니다.</p></li><li><p>만들어준 repo 의 setting 으로 가게 된다면 이번 포스팅의 앞부분에서 보인 이미지 처럼 source 를 gh_pages branch 로 변경해야 합니다.</p></li><li><p>마지막으로 local 에 있는 _config.yml 파일에서 root: 값을 만들어둔 레포의 이름으로 만듭니다. 저의 경우 아래와 같습니다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://uniqueimaginate.github.io/my_blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/my_blog</span></span><br></pre></td></tr></table></figure></li><li><p>이제 local 에 있는 모든 파일을 github로 푸시한 뒤에 약간의 시간이 흐른 후 &lt;사용자id&gt;.github.io/<repo name> 으로 접속해봅시다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Heo-Blog-만들기-3&quot;&gt;&lt;a href=&quot;#Heo-Blog-만들기-3&quot; class=&quot;headerlink&quot; title=&quot;Heo Blog 만들기 # 3&quot;&gt;&lt;/a&gt;Heo Blog 만들기 # 3&lt;/h1&gt;&lt;h2 id=&quot;Hexo-블로그를-github-pages-를-통해서-배포하기&quot;&gt;&lt;a href=&quot;#Hexo-블로그를-github-pages-를-통해서-배포하기&quot; class=&quot;headerlink&quot; title=&quot;Hexo 블로그를 github pages 를 통해서 배포하기&quot;&gt;&lt;/a&gt;Hexo 블로그를 github pages 를 통해서 배포하기&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Github pages, Travis CI, deploy" scheme="https://uniqueimaginate.github.io/my_blog/tags/Github-pages-Travis-CI-deploy/"/>
    
  </entry>
  
  <entry>
    <title>Making Hexo Blog #2</title>
    <link href="https://uniqueimaginate.github.io/my_blog/2020/04/29/Making-Hexo-Blog-2/"/>
    <id>https://uniqueimaginate.github.io/my_blog/2020/04/29/Making-Hexo-Blog-2/</id>
    <published>2020-04-29T14:28:09.000Z</published>
    <updated>2020-05-04T13:23:42.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Blog-만들기-2"><a href="#Hexo-Blog-만들기-2" class="headerlink" title="Hexo Blog 만들기 # 2"></a>Hexo Blog 만들기 # 2</h1><h2 id="Hexo-블로그에-테마-적용하기"><a href="#Hexo-블로그에-테마-적용하기" class="headerlink" title="Hexo 블로그에 테마 적용하기"></a>Hexo 블로그에 테마 적용하기</h2><a id="more"></a><p>먼저 hexo 를 설치하면 default theme 가 설치 되어 있습니다.<br>그러나 이번 포스트는 테마를 바꾸는 방법에 대해 설명하겠습니다.</p><ol><li><p>먼저 고르려고 하는 테마를 고릅니다.<br> 저 같은 경우에는 <a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="noopener">apollo</a> 테마를 선택하였습니다.</p></li><li><p>각 테마마다 요구하는 npm package 가 있습니다. 저의 경우는 다음과 같습니다.</p><pre><code>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code></pre></li><li><p>그 다음 테마가 담긴 폴더를 clone 합니다.</p><pre><code>git clone https://github.com/pinggod/hexo-theme-apollo.git themes/apollo</code></pre></li><li><p>Hexo 를 local 에서 보고 싶다면    </p><p> <code>hexo server</code>     </p><p> 이제 local host 에서 볼 수 있습니다.</p><p> <img src="../../../../images/hexo_server.png" alt="hexo_server">(Mac zsh)</p></li></ol><p>잘 따라왔다면 local 에서 error 가 날 가능성은 딱히 없을 것이라 생각됩니다.<br>만약 error가 생긴다면 clone 한 theme 폴더에서 문제가 생겼을 가능성이 높습니다.<br>이 때, 테마 폴더로 가서 <code>npm install</code> 을 해보세요.</p><p>여기까지 로컬 환경에서의 Hexo setting 입니다.<br>다음은 git 과 github pages, Travis CI 를 이용한 배포 포스팅을 진행하겠습니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-Blog-만들기-2&quot;&gt;&lt;a href=&quot;#Hexo-Blog-만들기-2&quot; class=&quot;headerlink&quot; title=&quot;Hexo Blog 만들기 # 2&quot;&gt;&lt;/a&gt;Hexo Blog 만들기 # 2&lt;/h1&gt;&lt;h2 id=&quot;Hexo-블로그에-테마-적용하기&quot;&gt;&lt;a href=&quot;#Hexo-블로그에-테마-적용하기&quot; class=&quot;headerlink&quot; title=&quot;Hexo 블로그에 테마 적용하기&quot;&gt;&lt;/a&gt;Hexo 블로그에 테마 적용하기&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="hexo, blog, github pages" scheme="https://uniqueimaginate.github.io/my_blog/tags/hexo-blog-github-pages/"/>
    
  </entry>
  
  <entry>
    <title>Making Hexo Blog #1</title>
    <link href="https://uniqueimaginate.github.io/my_blog/2020/04/29/Making-Hexo-Blog-1/"/>
    <id>https://uniqueimaginate.github.io/my_blog/2020/04/29/Making-Hexo-Blog-1/</id>
    <published>2020-04-29T07:40:55.000Z</published>
    <updated>2020-05-04T13:23:42.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Blog-만들기-1"><a href="#Hexo-Blog-만들기-1" class="headerlink" title="Hexo Blog 만들기 # 1"></a>Hexo Blog 만들기 # 1</h1><h2 id="Hexo-플랫폼을-이용해-만든-블로그입니다"><a href="#Hexo-플랫폼을-이용해-만든-블로그입니다" class="headerlink" title="Hexo 플랫폼을 이용해 만든 블로그입니다."></a>Hexo 플랫폼을 이용해 만든 블로그입니다.</h2><a id="more"></a><ol><li><p>Node.js 와 git 을 각자의 OS 에 맞게 설치를 합니다.</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js 설치 (버전은 10.0 이상을 권장합니다.)</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">git 설치</a></li></ul></li><li><p>Hexo 를 설치합니다.    </p><p> <code>npm install hexo</code>    </p></li><li><p>이제 hexo 를 사용하면 됩니다.    </p><p> <code>npx hexo &lt;command> </code>    </p><p> 리눅스 유저는 다음과 같이 경로 설정을 하면 됩니다.    </p><p> <code>echo 'PATH="$PATH:./node_modules/.bin"' >> ~/.profile</code></p><p> 경로 설정을 하면 다음과 같이 사용할 수 있습니다      </p><p> <code>hexo &lt;command></code></p></li></ol><p>ex) Hexo 로 새로운 post 를 만드는 코드    </p><pre><code>&lt;code&gt;hexo new &apos;post 이름&apos;&lt;/code&gt;</code></pre><p>더 자세한 설명은 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo Doc</a>에서 볼 수 있습니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-Blog-만들기-1&quot;&gt;&lt;a href=&quot;#Hexo-Blog-만들기-1&quot; class=&quot;headerlink&quot; title=&quot;Hexo Blog 만들기 # 1&quot;&gt;&lt;/a&gt;Hexo Blog 만들기 # 1&lt;/h1&gt;&lt;h2 id=&quot;Hexo-플랫폼을-이용해-만든-블로그입니다&quot;&gt;&lt;a href=&quot;#Hexo-플랫폼을-이용해-만든-블로그입니다&quot; class=&quot;headerlink&quot; title=&quot;Hexo 플랫폼을 이용해 만든 블로그입니다.&quot;&gt;&lt;/a&gt;Hexo 플랫폼을 이용해 만든 블로그입니다.&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="hexo, blog" scheme="https://uniqueimaginate.github.io/my_blog/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="https://uniqueimaginate.github.io/my_blog/2020/04/27/My-first-blog/"/>
    <id>https://uniqueimaginate.github.io/my_blog/2020/04/27/My-first-blog/</id>
    <published>2020-04-27T16:11:29.000Z</published>
    <updated>2020-05-04T13:23:42.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="첫-포스팅"><a href="#첫-포스팅" class="headerlink" title="첫 포스팅"></a>첫 포스팅</h2><p>감격스러운 첫 포스팅이다.</p><a id="more"></a><p>원래 jekyll 로 간단한 블로그를 만들려고 하다가 너무 뻔한 것 같아서 새로운 것을 시작해보았다. 물론 jekyll 로 블로그를 만들어 볼 시도 조차도 하지 않아서 감히 뻔하다고 할 수는 없지만, 너무 흔해서 피하고 싶었다.</p><p>그래서 시도한 것이 Hexo. 이름부터 XOXO 느낌이 나서 선택하게 되었다. </p><p>그렇다. 이 블로그는 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 라는 플랫폼 위에서 작성 되었으며  <a href="https://travis-ci.com/" target="_blank" rel="noopener">Travis CI</a>, <a href="https://pages.github.com/" target="_blank" rel="noopener">Github pages</a>  를 통해서 deploy 되었다. </p><p>단순한 디자인의 <a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="noopener">apollo</a> theme을 선택하였다. </p><p>다음 포스팅에서 어떻게 블로그를 만들었으며, Travis CI 와 Github를 어떻게 연동하는 포스트를 작성해 보겠다.</p><p>아마 이 후에는 CI/CD 에 대해 공부한 후에 포스팅 해보지 않을까 싶다. 배포하는데 이렇게나 편하다니..</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;첫-포스팅&quot;&gt;&lt;a href=&quot;#첫-포스팅&quot; class=&quot;headerlink&quot; title=&quot;첫 포스팅&quot;&gt;&lt;/a&gt;첫 포스팅&lt;/h2&gt;&lt;p&gt;감격스러운 첫 포스팅이다.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="first_post" scheme="https://uniqueimaginate.github.io/my_blog/tags/first-post/"/>
    
  </entry>
  
</feed>
